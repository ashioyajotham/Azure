# Create a Regression Model with Azure Machine Learning Designer

//Regression is an example of a supervised machine learning technique in which you train a model to predict a numeric label based on an item's features.
//Regression is a machine learning technique in which you train a model using data that includes both the features and known values for the label, so that the model learns to fit the feature combinations to the label.
  N/B Microsoft Azure Machine Learning is a cloud-based platform for building and operating machine learning solutions in Azure. It includes a wide range of features and capabilities that help data scientists prepare data, train models, publish predictive services, and monitor their usage. 
     One of these features is a visual interface called designer, that you can use to train, test, and deploy machine learning models without writing any code.
     
 [Create compute resources](https://www.coursera.org/learn/microsoft-azure-machine-learning/supplement/fscaG/exercise-part-2-create-compute-resources)
 
              * Compute Instances: Development workstations that data scientists can use to work with data and models. 

              * Compute Clusters: Scalable clusters of virtual machines for on-demand processing of experiment code. 

              *  Inference Clusters: Deployment targets for predictive services that use your trained models. 

               *  Attached Compute: Links to existing Microsoft Azure compute resources, such as Virtual Machines or Azure Databricks clusters. 

//To train a regression model, you need a dataset that includes historical features (characteristics of the entity for which you want to make a prediction) and 
known label values (the numeric value that you want to train a model to predict). 


  (https://www.coursera.org/learn/microsoft-azure-machine-learning/supplement/B9VQ3/exercise-part-3-explore-data)
  ## Create pipeline
  * To use the Microsoft Azure Machine Learning designer, you create a pipeline that you will use to train a machine learning model. 
    This pipeline starts with the dataset from which you want to train the model. 
    Observe that you need to specify a compute target on which to run the pipeline. 
    In the Settings pane, use Select compute target to select the compute cluster you created previously.
  
 * After you've used data transformations to prepare the data, you can use it to train a machine learning model. 

**Add training modules** 
//It's common practice to train the model using a subset of the data, while holding back some data with which to test the trained model. 
This enables you to compare the labels that the model predicts with the actual known labels in the original dataset. 


  ## Evaluate a model
  //To evaluate a regression model, you could simply compare the predicted labels to the actual labels in the validation dataset to held back during training, 
  but this is an imprecise process and doesn't provide a simple metric that you can use to compare the performance of multiple models. 
  
  These include the following regression performance metrics: 

     *Mean Absolute Error (MAE): The average difference between predicted values and true values. This value is based on the same units as the label, in this case dollars. 
                                The lower this value is, the better the model is predicting. 
     * Root Mean Squared Error (RMSE): The square root of the mean squared difference between predicted and true values. 
                                    The result is a metric based on the same unit as the label (dollars). When compared to the MAE (above), 
                                    a larger difference indicates greater variance in the individual errors (for example, with some errors being very small, while others are large). 
     * Relative Squared Error (RSE): A relative metric between 0 and 1 based on the square of the differences between predicted and true values. 
                             The closer to 0 this metric is, the better the model is performing. Because this metric is relative, it can be used to compare models where the labels are in different units. 
     * Relative Absolute Error (RAE): A relative metric between 0 and 1 based on the absolute differences between predicted and true values. 
                                   The closer to 0 this metric is, the better the model is performing. Like RSE, this metric can be used to compare models where the labels are in different units. 
     * Coefficient of Determination (R2): This metric is more commonly referred to as R-Squared, and summarizes how much of the variance between predicted and true values is explained by the model. 
                                   The closer to 1 this value is, the better the model is performing
    
    ## Create an Interference Pipeline (https://www.coursera.org/learn/microsoft-azure-machine-learning/supplement/Lct6Y/exercise-part-6-create-an-inference-pipeline)
    //After creating and running a pipeline to train the model, you need a second pipeline that performs the same data transformations for new data, and then uses the trained model to inference  (in other words, predict) label values based on its features. 
      This will form the basis for a predictive service that you can publish for applications to use. 
      
    ## Deploy a Predictive Model
    //Inference Clusters are used as deployment targets for predictive services that use your trained models. 
    //After you've created and tested an inference pipeline for real-time inferencing, you can publish it as a service for client applications to use.
    //You'll deploy the web service to a Microsoft Azure Container Instance (ACI). This type of compute is created dynamically, and is useful for development and testing. 
      For production, you should create an inference cluster, which provide an Azure Kubernetes Service (AKS) cluster that provides better scalability and security. 
      
     ## Test the service
     
 
You are creating a training pipeline for a regression model and your dataset contains hundreds of columns. 
For a particular part of your model, you want to use data only from some specific columns. Which module should you add to the pipeline? Select columns in a dataset


